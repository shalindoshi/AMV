<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PageTitle" xml:space="preserve">
    <value>Recipes</value>
  </data>
  <data name="R1Content" xml:space="preserve">
    <value>&lt;h4&gt; Ingredients &lt;/ h4&gt;
          &lt;h5&gt; For the dough: &lt;/ h5&gt;
                &lt;ul&gt;
                &lt;li&gt; 150 g of white wheat flour &lt;/ li&gt;
                &lt;li&gt; 90 g of margarine &lt;/ li&gt;
                &lt;li&gt; 90 g of brown sugar &lt;/ li&gt;
                &lt;li&gt; 20 g of cocoa &lt;/ li&gt;
                &lt;li&gt; 15 g of water &lt;/ li&gt;
                &lt;li&gt; 8 g ​​of chemical yeast &lt;/ li&gt;
                &lt;li&gt; 1 pinch of salt &lt;/ li&gt;
                &lt;/ ul&gt;
            &lt;h5&gt; For the filling: &lt;/ h5&gt;
                &lt;ul&gt;
                 &lt;li&gt; 500 g of natural soy yogurt &lt;/ li&gt;
                &lt;li&gt; 100 g of margarine &lt;/ li&gt;
                &lt;li&gt; 100 g of brown sugar &lt;/ li&gt;
                &lt;li&gt; 60 ml of natural soy milk &lt;/ li&gt;
                &lt;li&gt; 50 g of walnuts &lt;/ li&gt;
                &lt;li&gt; 10 g of cornstarch &lt;/ li&gt;
                &lt;li&gt; 1 vanilla pod (seeds only) &lt;/ li&gt;
                &lt;li&gt; 1 pinch of salt &lt;/ li&gt;
            &lt;/ ul&gt;
         &lt;h4&gt; Preparation &lt;/ h4&gt;
                &lt;ol&gt;
                    &lt;li&gt; Mix the margarine, flour, cocoa, sugar, yeast and salt to form a grit. Add the water and mix until it forms a dough. &lt;/ Li&gt;
                    &lt;li&gt; Stretch the dough with a rolling pin until it is 4-5 mm thick. &lt;/ li&gt;
                    &lt;li&gt; Grease a tall mold and pour it with the dough. Puncture the surface by different points with the help of a fork so that the dough does not rise. Rerserva. &lt;/ Li&gt;
                    &lt;li&gt; Heat the oven to 180º. &lt;/ li&gt;
                    &lt;li&gt; To prepare the cheesecake filling, melt the margarine in a bowl. On the other hand, heat the soy milk and dissolve the cornstarch in it. If necessary, use a blender to eliminate lumps. &lt;/ Li&gt;
                    &lt;li&gt; Cut the vanilla pod in half and take out the seeds. Add them to the margarine. &lt;/ Li&gt;
                    &lt;li&gt; Also add to the melted margarine the mixture of soy milk and cornstarch, yogurt, sugar, vanilla and a pinch of salt. Mix and pour into the mold. &lt;/ Li&gt;
                    &lt;li&gt; Place the split nuts and pieces of dough on top of the filling. &lt;/ li&gt;
                    &lt;li&gt; Bake the cheesecake at 180º for 75-80 minutes or until it clicks with a stick, it comes out clean. &lt;/ li&gt;
                    &lt;li&gt; Let the cheesecake cool before removing it. &lt;/ li&gt;
                 &lt;/ ol&gt;</value>
  </data>
  <data name="R1Title" xml:space="preserve">
    <value>Chocolate and Nut Vegan Cheesecake</value>
  </data>
  <data name="R2Content" xml:space="preserve">
    <value>&lt;h4&gt;Ingredients: &lt;/h4&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Bananas &lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;h4&gt;Kitchen instruments:&lt;/h4&gt;
&lt;p&gt;&lt;ul&gt;

&lt;li&gt;Blender &lt;/li&gt;
&lt;li&gt;Plastic bag &lt;/li&gt;
&lt;li&gt;Refridgerator &lt;/li&gt;
&lt;li&gt;Knife&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;h4&gt;Preparation method:&lt;/h4&gt;
&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Cut the bananas into small slices &lt;/li&gt;
&lt;li&gt;Put the pieces of banana in a plastic bag&lt;/li&gt;
&lt;li&gt;Put the plastic bag in the refrigerator for at least 24 hours &lt;/li&gt;
&lt;li&gt;Take some frozen bananas and put them in the blender&lt;/li&gt;
&lt;li&gt;Blend for a few minutes, until the consistency ressembles that of an ice cream &lt;/li&gt;&lt;/p&gt;
&lt;/ol&gt;</value>
  </data>
  <data name="R2Title" xml:space="preserve">
    <value>Vegan Ice Cream</value>
  </data>
  <data name="R3Content" xml:space="preserve">
    <value>Hello World!</value>
  </data>
  <data name="R3Title" xml:space="preserve">
    <value>Recipe 3</value>
  </data>
</root>